package gov.epa.festc.gui;

import gov.epa.festc.core.FestcApplication;
import gov.epa.festc.core.FestcConstants;
import gov.epa.festc.util.SpringLayoutGenerator;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SpringLayout;
import javax.swing.SwingConstants;
import javax.swing.UIManager;

public class ToolsPanel extends JPanel {
	private static final long serialVersionUID = 8082261605112772487L;
	private FestcApplication app;

	public ToolsPanel(FestcApplication festcApp) {
		app = festcApp;
		add(createPanel());
		super.requestFocusInWindow();
	}

	private JPanel createPanel() {
		JPanel main = new JPanel(new BorderLayout());
		main.add(getNorthPanel(), BorderLayout.NORTH);
		main.add(getCenterPanel(), BorderLayout.CENTER);
		Dimension d = main.getMinimumSize();
		d.width = 120;
		main.setMinimumSize(d);
		d = main.getMaximumSize();
		d.width = 120;
		main.setMaximumSize(d);
		return main;
	}

	private JPanel getNorthPanel() {
		JPanel panel = new JPanel();
		JLabel title = new JLabel(
				"", //"Fertilizer Emission Scenario Tool for CMAQ (FEST-C)", // Tools", 
				SwingConstants.CENTER);
		title.setFont(new Font("Default", Font.BOLD, 20));

		panel.add(title);
		panel.setBorder(BorderFactory.createEmptyBorder(10, 0, 20, 0));

		return panel;
	}

	private JPanel getCenterPanel() {
		JPanel panel = new JPanel(new SpringLayout());
		SpringLayoutGenerator layout = new SpringLayoutGenerator();
		//hsb = Color.RGBtoHSB(r,g,b,hsb);
<<<<<<< .mine
		JButton sitegenbutton = new JButton(buttonAction("Site Info Generation", FestcConstants.SITE_INFO_VIEW));
		sitegenbutton.setBackground(Color.getHSBColor(100, 100, 10));
		JButton m2pbutton = new JButton(buttonAction("MCIP/CMAQ To EPIC", FestcConstants.MCIP2EPIC_VIEW));
		m2pbutton.setBackground(Color.getHSBColor(100, 100, 10));
		JButton sitefilebutton = new JButton(buttonAction("EPIC Site File Generation", FestcConstants.SITE_FILE_VIEW));
		sitefilebutton.setBackground(Color.getHSBColor(100, 100, 10));
		//sitefilebutton.setForeground(Color.green);
		JButton genbutton = new JButton(buttonAction("Soil Match for EPIC Spinup", FestcConstants.GEN_SOIL_MAN_FILES_VIEW));
		//float[] hsbValues = new float[3];
		genbutton.setBackground(Color.getHSBColor(100, 100, 10));
		//genbutton.setForeground(Color.green);
		JButton manfilespinbutton = new JButton(buttonAction("Management File Generation for Spinup", FestcConstants.MAN_FILE_SPINUP_VIEW));
		manfilespinbutton.setBackground(Color.getHSBColor(100, 10, 100));
		//manfilespinbutton.setForeground(Color.blue);
		JButton modbutton = new JButton(buttonAction("View/Edit EPIC Inputs", FestcConstants.MANAGE_VIEW));
		modbutton.setBackground(Color.getHSBColor(100, 10, 100));
		//modbutton.setForeground(Color.blue);
		JButton epicbutton = new JButton(buttonAction("EPIC Runs for Spinup", FestcConstants.EPIC_VIEW));
		epicbutton.setBackground( Color.getHSBColor(100, 10, 100));
		//epicbutton.setForeground(Color.blue);
		JButton eya2cbutton = new JButton(buttonAction("EPIC Yearly Extraction", //EPIC Yearly Ave. To CMAQ", 
				FestcConstants.EPIC_YEARLY_AVERAGE2CMAQ_VIEW));
		eya2cbutton.setBackground(Color.getHSBColor(100, 10, 100));
		//eya2cbutton.setForeground(Color.blue);
		JButton manfileappbutton = new JButton(buttonAction("Management File Generation for Application", FestcConstants.MAN_FILE_APP_VIEW));
		manfileappbutton.setBackground(Color.getHSBColor(10, 200, 10));
		//manfileappbutton.setForeground(Color.orange);
		JButton epicappbutton = new JButton(buttonAction("EPIC Runs for Applications", FestcConstants.EPIC4APP_VIEW));
		epicappbutton.setBackground(Color.getHSBColor(10, 200, 10));
		//epicappbutton.setForeground(Color.orange);
		JButton e2cbutton = new JButton(buttonAction("EPIC To CMAQ", FestcConstants.EPIC2CMAQ_VIEW));
		e2cbutton.setBackground(Color.getHSBColor(10, 200, 10));
		//e2cbutton.setForeground(Color.orange);
=======
		JGradientButton sitegenbutton = new JGradientButton(buttonAction("EPIC Site Info Generation", FestcConstants.SITE_INFO_VIEW),
				Color.getHSBColor(100, 100, 10));
		JGradientButton m2pbutton = new JGradientButton(buttonAction("MCIP/CMAQ To EPIC", FestcConstants.MCIP2EPIC_VIEW),
				Color.getHSBColor(100, 100, 10));
		JGradientButton sitefilebutton = new JGradientButton(buttonAction("EPIC Site File Generation", FestcConstants.SITE_FILE_VIEW),
				Color.getHSBColor(100, 100, 10));
		JGradientButton genbutton = new JGradientButton(buttonAction("Soil Match for EPIC Spinup", FestcConstants.GEN_SOIL_MAN_FILES_VIEW),
				Color.getHSBColor(100, 100, 10));
		JGradientButton manfilespinbutton = new JGradientButton(buttonAction("Management File Generation for Spinup", FestcConstants.MAN_FILE_SPINUP_VIEW),
				Color.getHSBColor(100, 10, 100));
		JGradientButton modbutton = new JGradientButton(buttonAction("View/Edit EPIC Inputs", FestcConstants.MANAGE_VIEW),
				Color.getHSBColor(100, 10, 100));
		JGradientButton epicbutton = new JGradientButton(buttonAction("EPIC Runs for Spinup", FestcConstants.EPIC_VIEW),
				Color.getHSBColor(100, 10, 100));
		JGradientButton eya2cbutton = new JGradientButton(buttonAction("EPIC SPINUP Extraction", FestcConstants.EPIC_YEARLY_AVERAGE2CMAQ_VIEW),
				Color.getHSBColor(100, 10, 100));
		JGradientButton manfileappbutton = new JGradientButton(buttonAction("Management File Generation for Application", FestcConstants.MAN_FILE_APP_VIEW),
				Color.getHSBColor(10, 200, 10));
		JGradientButton epicappbutton = new JGradientButton(buttonAction("EPIC Runs for Applications", FestcConstants.EPIC4APP_VIEW),
				Color.getHSBColor(10, 200, 10));
		JGradientButton e2cbutton = new JGradientButton(buttonAction("EPIC To CMAQ", FestcConstants.EPIC2CMAQ_VIEW), 
				Color.getHSBColor(10, 200, 10));
>>>>>>> .r203
		JButton visbutton = new JButton(buttonAction("Visualization", FestcConstants.VISUALIZE_VIEW));
				
		sitegenbutton.setPreferredSize(new Dimension(340, 40));
		m2pbutton.setPreferredSize(new Dimension(340, 40));
		sitefilebutton.setPreferredSize(new Dimension(340, 40));
		genbutton.setPreferredSize(new Dimension(340, 40));
		manfilespinbutton.setPreferredSize(new Dimension(340, 40));
		modbutton.setPreferredSize(new Dimension(340, 40));
		epicbutton.setPreferredSize(new Dimension(340, 40));
		eya2cbutton.setPreferredSize(new Dimension(340, 40));
		manfileappbutton.setPreferredSize(new Dimension(340, 40));
		epicappbutton.setPreferredSize(new Dimension(340, 40));
		e2cbutton.setPreferredSize(new Dimension(340, 40));
		visbutton.setPreferredSize(new Dimension(340, 40));
		
		sitegenbutton.setFont(new Font("Default", Font.PLAIN, 14));
		m2pbutton.setFont(new Font("Default", Font.PLAIN, 14));
		sitefilebutton.setFont(new Font("Default", Font.PLAIN, 14));
		genbutton.setFont(new Font("Default", Font.PLAIN, 14));
		manfilespinbutton.setFont(new Font("Default", Font.PLAIN, 14));
		modbutton.setFont(new Font("Default", Font.PLAIN, 14));
		epicbutton.setFont(new Font("Default", Font.PLAIN, 14));
		eya2cbutton.setFont(new Font("Default", Font.PLAIN, 14));
		manfileappbutton.setFont(new Font("Default", Font.PLAIN, 14));
		epicappbutton.setFont(new Font("Default", Font.PLAIN, 14));
		e2cbutton.setFont(new Font("Default", Font.PLAIN, 14));
		visbutton.setFont(new Font("Default", Font.PLAIN, 14));
			
		layout.addLabelWidgetPair("", sitegenbutton, panel);
		layout.addLabelWidgetPair("", m2pbutton, panel);
		layout.addLabelWidgetPair("", sitefilebutton, panel);
		layout.addLabelWidgetPair("", genbutton, panel);
		layout.addLabelWidgetPair("", manfilespinbutton, panel);
		layout.addLabelWidgetPair("", modbutton, panel);
		layout.addLabelWidgetPair("", epicbutton, panel);
		layout.addLabelWidgetPair("", eya2cbutton, panel);
		layout.addLabelWidgetPair("", manfileappbutton, panel);
		layout.addLabelWidgetPair("", epicappbutton, panel);
		layout.addLabelWidgetPair("", e2cbutton, panel);
		layout.addLabelWidgetPair("", visbutton, panel);
		
		layout.makeCompactGrid(panel, 12, 2, // number of rows and cols
				1, 1, // initial X and Y
				1, 1); // x and y pading

		return panel;
	}
	
	   static void adjustGradient(Color color) {  
	        List list = new ArrayList();  
	        list.add(new Float(0.3F));  
	        list.add(new Float(0));  
	        list.add(color);  
	        list.add(Color.WHITE);  
	        list.add(color.darker().darker());  
	        UIManager.put("Button.gradient", list);  
	    }  

	private Action buttonAction(final String name, final String viewId) {
		return new AbstractAction(name) {
			private static final long serialVersionUID = -957559355824942766L;

			public void actionPerformed(ActionEvent e) {
				app.showTab(viewId);
			}
		};
	}
	
    private class JGradientButton extends JButton {
		private static final long serialVersionUID = -2397650058508947005L;
		private Color bckGrndColor;
    	
        private JGradientButton(Action action, Color bckGrndColor){
            super(action);
            setContentAreaFilled(false);
            setFocusPainted(false); // used for demonstration
            this.bckGrndColor = bckGrndColor;
        }

        @Override
        protected void paintComponent(Graphics g){
            Graphics2D g2 = (Graphics2D)g.create();
            g2.setPaint(new GradientPaint(
                    new Point(0, getHeight() / 3), 
                    Color.WHITE, 
                    new Point(0, 0), 
                    bckGrndColor, true));
            g2.fillRect(0, 0, getWidth(), (getHeight() * 2) / 3);
            g2.setPaint(bckGrndColor);
            g2.fillRect(0, (getHeight() * 2) / 3, getWidth(), getHeight());
            g2.dispose();

            super.paintComponent(g);
        }
    }

}
